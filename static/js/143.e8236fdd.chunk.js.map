{"version":3,"file":"static/js/143.e8236fdd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/Contacts/api';\nimport Notiflix from 'notiflix';\nimport Button from '@mui/material/Button';\nimport { TextField } from 'formik-mui';\nimport { Form, Formik, Field } from 'formik';\nimport { Box } from '@mui/material';\n\nexport function ContactForm() {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const getValues = inputValues => {\n    if (inputValues.name === '' || inputValues.number === '') {\n      return;\n    } else if (\n      contacts.find(contact => {\n        return contact.name === inputValues.name;\n      })\n    ) {\n      return Notiflix.Report.info(`${inputValues.name} is already in contacts`);\n    } else {\n      const contact = {\n        name: inputValues.name,\n        number: inputValues.number,\n      };\n      addContact(contact);\n      inputValues.name = '';\n      inputValues.number = '';\n    }\n  };\n\n  const values = {\n    name: '',\n    number: '',\n  };\n\n  const phoneSchema = Yup.number()\n    .typeError(\"That doesn't look like a phone number\")\n    .positive(\"A phone number can't start with a minus\")\n    .integer(\"A phone number can't include a decimal point\")\n    .min(5)\n    .required('A phone number is required');\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(),\n    number: phoneSchema,\n  });\n\n  return (\n    <Formik\n      initialValues={values}\n      onSubmit={getValues}\n      validationSchema={validationSchema}\n    >\n      <Form>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-end',\n            width: '100%',\n            ml: 'auto',\n            mr: 'auto',\n          }}\n        >\n          <Field\n            component={TextField}\n            name=\"name\"\n            label=\"name\"\n            id=\"standard-basic\"\n            variant=\"standard\"\n            disabled={false}\n            margin=\"normal\"\n          />\n          <Field\n            component={TextField}\n            name=\"number\"\n            label=\"number\"\n            id=\"standard-basic\"\n            variant=\"standard\"\n            disabled={false}\n            margin=\"normal\"\n          />\n          <Box sx={{ ml: 'auto' }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={isLoading}\n            >\n              {isLoading ? 'please wait...' : 'add contact'}\n            </Button>\n          </Box>\n        </Box>\n      </Form>\n    </Formik>\n  );\n}\n","import * as Yup from 'yup';\nimport { Form, Formik, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDeleteContactMutation, useEditContactMutation } from 'redux/Contacts/api';\nimport Notiflix from 'notiflix';\nimport { TextField } from 'formik-mui';\nimport { Box, Button, ListItem, Typography } from '@mui/material';\n\nexport function ContactListItem({ name, number, id, array, index }) {\n    const [removeContact, { isLoading }] = useDeleteContactMutation();\n    const [editContact, { isLoading: load }] = useEditContactMutation();\n\n    const [showForm, setShowForm] = useState(false);\n    const values = { name, number, };\n        \n        const phoneSchema = Yup.number()\n            .typeError(\"That doesn't look like a phone number\")\n            .positive(\"A phone number can't start with a minus\")\n            .integer(\"A phone number can't include a decimal point\")\n            .min(5)\n            .required('A phone number is required');\n        \n        const validationSchema = Yup.object({\n            name: Yup.string().max(20).required(),\n            number: phoneSchema,\n        });\n    \n    function changeContact(inputValues){\n       \n            const contact = {\n                name: inputValues.name,\n                number: inputValues.number,\n        };\n      \n        if (array.find(({name}, pos) => name === contact.name && pos !== index)) {\n           Notiflix.Report.info('a contact with that name already exists');\n            return\n        }\n        if (array.find(({ name, number }) => name === contact.name && number === contact.number)) {\n            Notiflix.Report.info('cotact data has not changed');\n            return\n        }\n        editContact({ id, contact });\n        setShowForm(false)\n    };\n  \n    return (\n        <ListItem sx={{ display: 'flex', justifyContent: 'space-between', borderBottom:'1px solid black' }}>\n            {!showForm ?\n                (load || isLoading ? <Typography><b>please wait............</b></Typography> :\n                    < >\n                        <Box>\n                            <Typography ><b>{name} : </b> {number}</Typography>\n                        </Box>\n                        <Box sx={{ ml: 'auto' }}>\n                            <Button variant=\"contained\" onClick={() => { setShowForm(true) }} type='button' sx={{ ml: '10px' }}>Edit</Button>\n                            <Button variant=\"contained\" onClick={() => { removeContact(id) }} type='button' sx={{ ml: '10px' }}>Delete</Button>\n                        </Box>\n                    </>) : (\n                    <Formik initialValues={values} onSubmit={changeContact} validationSchema={validationSchema} >\n                        <Form style={{ width: '100%' }}>\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', }}>\n                                <Box>\n                                    <Field component={TextField} name=\"name\" variant=\"standard\" disabled={false} />\n                                    <Field component={TextField} name=\"number\" variant=\"standard\" disabled={false} />\n                                </Box>\n                                <Box>\n                                    <Button variant=\"contained\" color='secondary' type=\"submit\" sx={{ ml: '10px' }}>Confirm</Button>\n                                    <Button variant=\"contained\" color='secondary' type=\"button\" onClick={() => { setShowForm(false) }} sx={{ ml: '10px' }} >Cancel</Button>\n                                </Box> </Box>\n                        </Form>\n                    </Formik>\n                )}\n        </ListItem>\n    );\n};\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    array: PropTypes.array.isRequired,\n    index:PropTypes.number.isRequired,\n};\n\n","import { Box, List, Typography } from '@mui/material';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/Contacts/api';\n\n\nexport function ContactList () {\n    const { data } = useGetContactsQuery();\n   \n    const filter = useSelector(state => state.filter);\n     if(!data)return\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = data.filter(({ name }) => {\n        return name.toLowerCase().includes(normalizedFilter);\n    });\n\n    return (\n        data.length > 0 ?\n        <Box sx={{ width: 'auto' }}>\n            <Typography variant=\"h3\">Contacts [{data.length}]</Typography>\n            <List>\n                {filteredContacts.map(({ name, number, id }, index) => {\n                    return <ContactListItem\n                        index={index}\n                        array={filteredContacts}\n                        key={id}\n                        name={name}\n                        number={number}\n                        id={id}\n                    />\n                }\n                )}\n            </List>\n            </Box> :\n          <Typography variant=\"h3\">There is no contacts yet</Typography>  \n    );\n};\n","import { useDispatch } from 'react-redux';\nimport { getFlter } from 'redux/Filter/slice';\nimport { Box, TextField } from '@mui/material';\n\n\nexport function Filter() {\n    const dispatch = useDispatch()\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'flex-end',\n                width: '100%',\n                ml: 'auto',\n                mr: 'auto',\n            }}>\n            <TextField\n                name=\"filter\"\n                type=\"text\"\n                label=\"Find contacts by name\"\n                id=\"standard-basic\"\n                variant=\"standard\"\n                disabled={false}\n                onChange={(e) => dispatch(getFlter(e.target.value))}\n            />\n        </Box>\n    );\n};\n","import { Container } from '@mui/material';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <Container sx={{ p: '40px', opacity: '.6' }}>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </Container>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useGetContactsQuery } from \"redux/Contacts/api\";\n\nfunction ContactsPage() {\n  const { error, isLoading, refetch } = useGetContactsQuery();\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    isLoading ? <Loader /> :\n      <Box sx={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: 'wrap', alignItems: 'flex-start', p: '40px', }}>\n        {error ? <h1>{error.message}</h1> :\n          <Box sx={{ width: 'auto' }}>\n            <Typography variant=\"h2\">Phonebook</Typography>\n            <ContactForm />\n            <Filter />\n          </Box>}\n        <ContactList />\n      </Box>\n  );\n};\n\nexport default ContactsPage;"],"names":["ContactForm","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","phoneSchema","Yup","typeError","positive","integer","min","required","validationSchema","name","number","initialValues","onSubmit","inputValues","find","contact","Notiflix","Box","sx","display","flexDirection","justifyContent","width","ml","mr","component","TextField","label","id","variant","disabled","margin","Button","color","type","ContactListItem","array","index","useDeleteContactMutation","removeContact","useEditContactMutation","editContact","load","useState","showForm","setShowForm","values","max","ListItem","borderBottom","pos","style","onClick","Typography","ContactList","filter","useSelector","state","normalizedFilter","toLowerCase","filteredContacts","includes","length","List","map","Filter","dispatch","useDispatch","onChange","e","getFlter","target","value","Loader","Container","p","opacity","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","error","refetch","useEffect","flexWrap","alignItems","message"],"sourceRoot":""}